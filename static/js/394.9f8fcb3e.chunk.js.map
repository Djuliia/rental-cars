{"version":3,"file":"static/js/394.9f8fcb3e.chunk.js","mappings":"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","sources":["components/Catalog/Catalog.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/CatalogPage.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { loadMoreCars } from '../../redux/operations';\nimport {\n  selectCars,\n  selectCarsFiltered,\n  selectHasMore,\n} from '../../redux/selectors';\nimport { BtnLoadMore, CardList } from './Catalog.styled';\n\nimport { CarItem } from 'components/CarItem/CarItem';\n\nexport const Catalog = () => {\n  const dispatch = useDispatch();\n  const hasMore = useSelector(selectHasMore);\n  const cars = useSelector(selectCars);\n  const carsFiltered = useSelector(selectCarsFiltered);\n\n  const handleLoadMore = () => {\n    dispatch(\n      loadMoreCars({ page: Math.ceil(cars.length / 12) + 1, limit: 12 })\n    );\n  };\n\n  return (\n    <div>\n      <CardList>\n        {(carsFiltered.length > 0 ? carsFiltered : cars).map(car => (\n          <CarItem key={car.id} car={car} />\n        ))}\n      </CardList>\n\n      {hasMore && (\n        <BtnLoadMore type=\"button\" onClick={handleLoadMore}>\n          Load more\n        </BtnLoadMore>\n      )}\n    </div>\n  );\n};\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: end;\n  margin-bottom: 50px;\n`;\n\nexport const BtnSearch = styled.button`\n  display: flex;\n  padding: 14px 44px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 12px;\n  background: #3470ff;\n  border: none;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.43;\n  cursor: pointer;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n\n  @media screen and (max-width: 767px) {\n    margin-top: 24px;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  margin-top: 8px;\n  margin-right: 18px;\n  padding: 14px 18px;\n  background: #f7f7fb;\n  outline: none;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  border-radius: 14px;\n  border: none;\n\n  & option {\n    padding: 14px 8px 14px 18px;\n    border: 1px solid rgba(18, 20, 23, 0.05);\n    background: #fff;\n    box-shadow: 0px 4px 36px 0px rgba(0, 0, 0, 0.02);\n    color: rgba(18, 20, 23, 0.2);\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.25;\n  }\n\n  &::placeholder {\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.11;\n    color: #121417;\n  }\n\n  &:is(:hover, :focus) {\n    cursor: pointer;\n  }\n\n  &.price {\n    width: 125px;\n  }\n\n  &.from {\n    margin-right: 0;\n    padding: 14px 24px;\n    border-radius: 14px 0px 0px 14px;\n    border-right: 1px solid rgba(138, 138, 137, 0.2);\n    max-width: 100px;\n\n    @media screen and (min-width: 768px) {\n      max-width: 160px;\n    }\n  }\n\n  &.to {\n    padding: 14px 24px;\n    max-width: 100px;\n    border-radius: 0px 14px 14px 0px;\n\n    @media screen and (min-width: 768px) {\n      max-width: 160px;\n    }\n  }\n  &:focus {\n    caret-color: #121417;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  color: #8a8a89;\n`;\n","import { Formik } from 'formik';\nimport carBrands from '../../data/makes.json';\nimport pricePerHour from '../../data/price.json';\nimport { BtnSearch, Label, StyledField, StyledForm } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { getCars, getCarsFiltered } from '../../redux/operations';\nimport { resetFilters, setFilters } from '../../redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (!values.brand && !values.price && !values.from && !values.to) {\n      dispatch(resetFilters());\n      dispatch(getCars());\n      return;\n    }\n    dispatch(setFilters(values));\n    dispatch(getCarsFiltered(values));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        brand: '',\n        price: '',\n        from: '',\n        to: '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      {({ setFieldValue }) => (\n        <StyledForm>\n          <Label>\n            Car brand\n            <StyledField\n              className=\"brand\"\n              name=\"brand\"\n              as=\"select\"\n              onChange={e => {\n                setFieldValue(\n                  'brand',\n                  e.target.value === 'All' ? '' : e.target.value\n                );\n              }}\n            >\n              <option value=\"default\" hidden>\n                Enter brand\n              </option>\n              <option value=\"\">All</option>\n              {carBrands.map(brand => (\n                <option key={brand} value={brand}>\n                  {brand}\n                </option>\n              ))}\n            </StyledField>\n          </Label>\n          <Label>\n            Price/ 1 hour\n            <StyledField\n              className=\"price\"\n              name=\"price\"\n              as=\"select\"\n              onChange={e => {\n                setFieldValue(\n                  'price',\n                  e.target.value === 'All' ? '' : e.target.value\n                );\n              }}\n            >\n              <option value=\"default\" hidden>\n                To $\n              </option>\n              <option value=\"\">All</option>\n              {pricePerHour.map(price => (\n                <option key={price} value={price}>\n                  {price}\n                </option>\n              ))}\n            </StyledField>\n          </Label>\n          <Label>\n            Ð¡ar mileage / km\n            <div>\n              <StyledField\n                type=\"text\"\n                className=\"from\"\n                name=\"from\"\n                placeholder=\"From\"\n              />\n              <StyledField\n                type=\"text\"\n                className=\"to\"\n                name=\"to\"\n                placeholder=\"To\"\n              />\n            </div>\n          </Label>\n          <BtnSearch type=\"submit\">Search</BtnSearch>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n","import { Catalog } from 'components/Catalog/Catalog';\nimport { Filter } from 'components/Filter/Filter';\nimport { CarLoader } from 'components/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsError, selectIsLoading } from '../redux/selectors';\nimport { useEffect } from 'react';\nimport { getCars } from '../redux/operations';\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const isError = useSelector(selectIsError);\n\n  useEffect(() => {\n    dispatch(getCars());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Filter />\n      {isLoading && <CarLoader />}\n      {!isLoading && !isError  && <Catalog />}\n    </>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["Catalog","dispatch","useDispatch","hasMore","useSelector","selectHasMore","cars","selectCars","carsFiltered","selectCarsFiltered","_jsxs","children","_jsx","CardList","length","map","car","CarItem","id","BtnLoadMore","type","onClick","loadMoreCars","page","Math","ceil","limit","StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","BtnSearch","_templateObject2","StyledField","Field","_templateObject3","Label","_templateObject4","Filter","Formik","initialValues","brand","price","from","to","onSubmit","values","_ref","resetForm","resetFilters","getCars","setFilters","getCarsFiltered","_ref2","setFieldValue","className","name","as","onChange","e","target","value","hidden","carBrands","pricePerHour","placeholder","isLoading","selectIsLoading","isError","selectIsError","useEffect","_Fragment","CarLoader"],"sourceRoot":""}